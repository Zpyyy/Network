第  5  周                月      日 --        月      日
2、存在不足
自动化用例的耦合程度较高，还需提高编程能力，尽可能减小耦合度，提高代码健壮性。工作中效率尽管和上个月相比有了提升但还是不够，遇到问题有时会卡很久，个人能力还有很大提升空间。
工作之余的学习效率低下，日常的学习节奏还未掌握，没有制定一个明确的学习计划，以至于学习内容不是很具体，比较杂乱，也常因为自身惰性滞后学习内容。
一是提高个人工作效率，加强业务知识的学习，加深对硬件测试的理解，尽可能多接触一些芯片特性，掌握不同模块的相关基础知识，扎实基础。新特性的自动化用例需借助ruby语言完成，还需学习ruby自动化框架，比较不同语言测试框架的优缺点。
第  6  周                月      日 --        月      日
本周主要在学习通过SD5182H的PRBS模块发流测试端口功能是否正常。PRBS：Pseudo-Random Binary Sequence，即伪随机码（伪随机二进制序列），常用于高速串行通道的测试。由于我的测试环境未连接Tesgine测试仪，因而收发包的整体过程看的不是很全面，对于报文在芯片内部的转发流程也不太明晰，只是在看统计结果是否正确，而对于报文发不出去或收不到无统计的情况，却无从下手。师傅这段时间也忙于各种会议，无暇顾及，只能通过自己在W3网页上查询各种问题原因，逐一解决，由于对业务还不是很熟悉，工作效率较低。
在遇见很长时间无法解决的问题时心态比较容易垮掉，但同事一过来指导，问题就解决了这才松了口气，还是要及时向周围寻求帮助，多问多学，加强自己对业务的理解。碰见的问题多了后面自然而然就知道解决办法了。

第  7  周                月      日 --        月      日
在上周成功通过PRBS发流打通两块单板之后，本周的工作逐渐变得顺利起来，这一周开始了以太端口MTU、自协商、速率双工等功能的自动化脚本编写。解决了发流问题后，脚本里的流程没什么技术含量，基本上是按部就班，逐条发送命令行并检查是否正确，最后再比较测试结果是否与预期相符，分析NP原因。最大传输单元（Maximum Transmission Unit，MTU）用来通知对方所能接受数据服务单元的最大尺寸，说明发送方能够接受的有效载荷大小。在测试该功能过程中，由于单板版本的不同，统计结果也与预期有些许偏差，后来和楼上软件部门协商才了解是各块单板没做到统一才出现的问题，后期还需修改脚本。刚开始还对自协商原理不是很熟悉，记错了一部分协商结果，导致测试脚本一直达不到预期，早会上和师傅沟通后才得知是预期结果配置出错而产生的问题，问题解决后师傅建议脚本连跑，下周来改NG。

第  8  周                月      日 --        月      日
上周结束后连跑了端口自动化脚本，原本单跑一切正常的脚本在连跑后出现了各种各样的问题，分析后大部分问题都是上一个脚本执行环境未清空导致的。刚开始就想着每次脚本执行完就复位一次单板，这样就保证了环境未进行其他配置，但这样的结果导致一套自动化跑下来要耗费3个小时以上，时间成本增加了一倍，大大降低了执行效率。最后还是通过pytest中teardown函数，在每个脚本运行后清空执行的命令，再进行下一个测试脚本。经过一轮番配置之后，发现很多操作指令可配成全局命令，全局执行一次即可，并不需要每次脚本都执行。
脚本修改后NG率大大降低，还有一些细节问题后面也逐一解决了，在给师傅评审后即将进入端口自动化测试收尾工作。还有一些变量的配置不太合理，后期需要适配其他类型的单板。

第  9  周                月      日 --        月      日
上周将端口自动化脚本写完后，师傅要求换一块芯片的单板看脚本能否适配。去实验室搭建一套新的环境后，在加新版本问题上磕了很久，由于我个人PC上的绿传不能正常使用，传统通过绿传加版本的方法无效，学习了本地加版本的方法，配置好单板的环境变量后却无法连接服务器，获取不到本地版本，找了几个同事分析好一段时间后才知道该单板配置未生效，需要配置相应的寄存器清零。好在是换单板后大部分脚本可顺利执行，还有小部分经过修改后也成功通过。
实习刚开始时，对于遇见的问题没有一个记录的意识，同时对于师傅安排的任务总是想当然觉得仅靠自身记忆能够记下来。最近发现的问题都是以前遇见过的，好记性不如烂笔头，还需要将工作中出现的问题做好总结并将每日安排做好时间规划，提高个人效率。

第  10 周                月      日 --        月      日
上周工作收尾后，师傅安排了大量命令行添加的工作，命令采用web式管理，在执行用例时，支撑库从平台获取最新版本生成数据库在本地；命令下发过程：A、原始结构根据设备命令封装成对应的aw接口（一条命令一个aw接口） B、特性接口中通过高层封装接口sendcmd对设备下发命令->收取设备回显->回显根据命令回显模板进行解析。在数据库添加命令行有一定的模板规则，是个很精细的活，对于格式有严格要求。之前由于单个空格的低级错误导致脚本运行失败，找了很久的bug最后才定位到命令行数据库数据的错误，十分浪费时间。因此这段时间也不图快，只求命令行质量过关，以免后期出现不可预测的调试问题，占用公共资源。

第  11 周                月      日 --        月      日
本周将完善的端口自动化测试脚本合并到同组的总仓中，之前只用过GIT工具拉代码到本地的功能，再上传代码时出现了很多问题。由于长期未和主仓同步，新上传的代码出现了很多冲突。查过W3才知道正确的代码拉取流程，应先从主仓fork到个人仓，再clone个人仓的代码到本地，再将本地代码上传到个人仓与主仓合并。在消除冲突的过程中费了很大功夫。
端口测试工作结束后，师傅安排了新特性vxlan功能给我测试，本周还在学习阶段，比较了vlan和vxlan的基本区别，以及vxlan的出现原由。更深入的原理还需继续学习，并在日后实践中得到验证。先参考别人的测试脚本，公司内部也有很多学习资源可供使用，在工作期间应提升个人效率挤压时间来学习，工作期间学习内容需要在工作之余的少有时间内快速吸收，边学边会。

第  12 周                月      日 --        月      日
师傅上周安排任务要求测试ONT单板vxlan功能，于本周便着手VXLAN的学习。VxLAN 全称是 Visual Extensible Local Area Network（虚拟扩展本地局域网），本质上是一种隧道封装技术。从名字上就知道，这是一个 VLAN 的扩展协议。它使用 TCP/IP 协议栈的惯用手法——封装/解封装技术，将 L2 的以太网帧封装成 L4 的 UDP 数据报，然后在 L3 的网络中传输，效果就像 L2 的以太网帧在一个广播域中传输一样，实际上是跨越了 L3 网络，但却感知不到 L3 网络的存在。在了解完特性原理之后就开始了第一个vxlan用例的手工测试。刚开始总是无法匹配报文，在报文入端口的过滤阶段就卡了很久，后来才知道配置vxlan有特定的filter要求，对于过滤器命令行的使用不是很熟悉，在同事的指导下，终于可以正常封装vxlan报文且捕获到。
刚开始接触新特性效率很低，接下来的工作要对vxlan报文各字段进行封装与解封装的测试。

第  13 周                月      日 --        月      日
上周通过手工测试熟悉了vxlan的测试流程后，这周开始着手于自动化用例的编写。师傅要求使用ruby语言于Impeller编译器上跑自动化脚本。Ruby于我来说是一个全新的语言，一种简单快捷的面向对象（面向对象程序设计）脚本语言，在Ruby语言中，任何东西都是对象，Ruby的变量可以保存任何类型的数据。此种语言语法简单，因此在参考同事的自动化代码时不用太费劲，而当真正上手编写脚本时还会有点细节需要注意。本周最大的工作量就在阅读使用到的支撑库各函数定义与功能，该支撑库是整个部门共同努力的结果，将种种函数封装成gems包，基本功能直接调用即可，非常方便。学习了ruby的基本语法和支撑库的基本使用后，开始了第一个ruby自动化脚本，但由于环境问题还没有调通，下周继续vxlan自动化脚本编写工作。

第  14 周                月      日 --        月      日
本周是我来华为技术有限公司实习的第14周，在上周钻研了很久Impeller自动化框架之后，本周的脚本编写工作终于顺手了很多，好在同组同学的工作比我早两个月接触ruby语言，很多问题都在他们的帮助下解决了，感激。在通过了第一个ruby用例后，后面的工作顺手了很多，在同一个特性功能下的脚本基本上是按照相同框架展开，果然是万事开头难。Vxlan封装报文这块工作完成的差不多了。下一步开始解封装的测试，本周也做了点尝试，虽然从原理上来看两种功能差的不多，但在测试过程中，vxlan报文解封装的步骤对报文要求更加严格，涉及到自研仪表SD5182H中PIE模块功能的细节使用。之前也接触过这个模块，但模块内部的逻辑实现和命令行参数相关配置尚且不太熟悉，还需和负责该模块测试的同事多多交流。

第  15 周                月      日 --        月      日
又一周过去了，这周的工作重点在于详细了解PIE模块的工作机制，PIE模块是SD5182H芯片的报文插入与提取模块，Package Insert and Extract,主要用于对进出CPU的报文进行相应的编辑，使得该报文带有某种特性。通过该模块可构造各种形式的报文，包括vxlan。上周的遗留问题是，通过PIE发送vxlan报文时对板无法识别该报文因而无法命中封装命令，原因在于我配置的PIE命令中，头长度和总报文长度参数设置的不合理，导致构造报文错位，无法识别该形式报文。与师傅和负责该特性的同事交流过后，成功将问题解决，vxlan的解封装自动化脚本也基本完成。
本周还和其他部门vxlan的软件负责人有了一些交流，收获颇多，很多问题超出了自己的能力范围，向外界寻求帮助也是一个很好的解决办法。

第  16 周                月      日 --        月      日
本周是实习的第16周，


第  17 周                月      日 --        月      日



第  20 周                月      日 --        月      日
本周的主要工作内容是将之前的测试特性自动化脚本进行单板适配的收尾工作，主要是以太端口、VXLAN特性脚本进行完善，实现在不同环境，不同版本、不同端口下的测试流程自动化顺利执行。并对端口测试新增了SGMII、HIMAC测试用例，对一二层网络的结构有了更深刻的理解，学习了MAC层与PHY层中间MII接口的相关知识，在完善自动化代码的过程中也发现了所编写脚本的缺陷所在，对自动化框架的整体构架有了更清晰的认识。
由于对特性的不熟悉，自动化脚本中很多变量都设置的非常死板，存在很多魔鬼数字需要修改。给师傅评审后，师傅给出了很多改进建议，测试结果log还需要增加测试步骤。后续工作还有很多要完善的点。继续优化代码结构，降低冗余度。

第  21 周                月      日 --        月      日


第  22 周                月      日 --        月      日
本周是在华为技术有限公司实习的第22周，上周将自动化测试工作收尾之后，本周开始一个新的工作任务，将着手于测试性能管理平台的设计开发。该性能管理平台是上一届学姐的工作成果，我们需要将其功能进行完善。初步敲定了该系统的实现框架和需求分析，花了几天时间学习了django框架且分析了学姐的代码，
